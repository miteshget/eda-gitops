---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: set-resource-quota-on-namespace
  namespace: eda
  labels:
    app: set-resource-quota-on-namespace
spec:
  replicas: 1
  selector:
    matchLabels:
      app: set-resource-quota-on-namespace
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: set-resource-quota-on-namespace  
    spec:
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: permission-init
          image: alpine:3.16.0
          command:
            - sh
            - -c
            - (chmod -R 777 /mnt/downloads)
          volumeMounts:
            - name: config-storage
              mountPath: /mnt/downloads
          
      containers:
        - name: set-resource-quota-on-namespace
          image: 'quay.io/ansible/ansible-rulebook:v0.12.0'
          workingDir: /mnt/workdir/src
          command:
            - /bin/bash
            - '-c'
            - |
              echo "# --------------------------------------------------------"
              echo "# Download openshift oc cli                               "
              echo "# --------------------------------------------------------"
              cd /mnt/downloads
              ls oc || ( wget https://mirror.openshift.com/pub/openshift-v4/clients/ocp/4.13.0-rc.0/openshift-client-linux.tar.gz && tar zxvf openshift-client-linux.tar.gz )
              cp oc /opt/app-root/bin/
              cd /mnt/workdir/src

              echo "# --------------------------------------------------------"
              echo "# Install python dependencies from requirements file      "
              echo "# --------------------------------------------------------"
              pip3 install -r requirements.txt

              echo "# --------------------------------------------------------"
              echo "# Install Ansible collection from requirements file       "
              echo "# --------------------------------------------------------"
              ansible-galaxy collection install -r requirements.yml

              echo "# --------------------------------------------------------"
              echo "# Login to OpenShift                                      "
              echo "# --------------------------------------------------------"
              oc login -u ${OCP_USER_NAME} -p ${OCP_USER_PASSWORD} --server=${OCP_API_URL} --certificate-authority=/mnt/workdir/certificate/ca.crt 

              echo "# --------------------------------------------------------"
              echo "# Run Ansible rulebook                                    "
              echo "# --------------------------------------------------------"
              ansible-rulebook -i inventory --rulebook rulebook.yml --verbose --controller-url ${AC_WEB_URL} --controller-token ${AC_TOKEN}

          volumeMounts:
            - name: config-storage
              mountPath: /mnt/downloads
            - name: config-file
              mountPath: /mnt/workdir/src/
            - name: kube-root-ca
              mountPath: /mnt/workdir/certificate/
          env:
            - name: OCP_API_URL
              valueFrom:
                secretKeyRef: 
                  name: openshift-api
                  key: openshift_api_url
            - name: OCP_USER_NAME
              valueFrom:
                secretKeyRef: 
                  name: openshift-api
                  key: openshift_user_name
            - name: OCP_USER_PASSWORD
              valueFrom:
                secretKeyRef: 
                  name: openshift-api
                  key: openshift_user_password
            - name: AC_WEB_URL
              valueFrom:
                secretKeyRef: 
                  name: automation-controller
                  key: aap_controller_web_url
            - name: AC_TOKEN
              valueFrom:
                secretKeyRef: 
                  name: automation-controller
                  key: aap_controller_token
      serviceAccount: eda-sa
      volumes:
        - name: config-file
          configMap:
            name: set-resource-quota-on-namespace
        - name: kube-root-ca
          configMap:
            name: kube-root-ca.crt
        - name: config-storage
          persistentVolumeClaim:
            claimName: set-resource-quota-on-namespace    

